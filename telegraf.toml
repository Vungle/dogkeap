# Telegraf configuration

# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared plugins.

# Even if a plugin has no configuration, it must be declared in here
# to be active. Declaring a plugin means just specifying the name
# as a section with no variables. To deactivate a plugin, comment
# out the name and any variables.

# Use 'telegraf -config telegraf.toml -test' to see what metrics a config
# file would generate.

# One rule that plugins conform to is wherever a connection string
# can be passed, the values '' and 'localhost' are treated specially.
# They indicate to the plugin to use their own builtin configuration to
# connect to the local system.

# NOTE: The configuration has a few required parameters. They are marked
# with 'required'. Be sure to edit those to make this configuration work.

# Tags can also be specified via a normal map, but only one form at a time:
[tags]
  app = "dogkeap"
# Configuration for telegraf agent
[agent]
  # Default data collection interval for all plugins
  interval = "10s"
  # Rounds collection interval to 'interval'
  # ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  # Default data flushing interval for all outputs. You should not set this below
  # interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "10s"
  # Jitter the flush interval by a random amount. This is primarily to avoid
  # large write spikes for users running a large number of telegraf instances.
  # ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "5s"

  # Run telegraf in debug mode
  debug = true
  # Override default hostname, if empty use os.Hostname()
  hostname = ""

###############################################################################
#                                  OUTPUTS                                    #
###############################################################################

[outputs]

# Configuration for DataDog API to send metrics to.
[[outputs.datadog]]
  # Datadog API key
  apikey = "DD_API_KEY" # required.
  # Connection timeout.
  timeout = "5s"

###############################################################################
#                              SERVICE PLUGINS                                #
###############################################################################
# Read metrics from Kafka topic(s)
[[inputs.kafka_consumer]]
  # topic(s) to consume
  topics = ["KAFKA_TOPIC"]
  # an array of Zookeeper connection strings
  zookeeper_peers = ["ZK_HOST"]
  # the name of the consumer group
  consumer_group = "CONSUMER_GROUP"
  # Offset (must be either "oldest" or "newest")
  offset = "CONSUMER_OFFSET"
  # Data format to consume.
  # Each data format has it's own unique set of configuration options, read
  # more about them here:
  # https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "json"
